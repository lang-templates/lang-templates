plugins {
    id 'java'
    id 'application'
    id 'com.github.johnrengelman.shadow' version '7.+'
    id 'edu.sc.seis.launch4j' version '3.0.6'
    // https://github.com/File5/intellij-idea-guidesigner-plugin
    id 'io.github.file5.guidesigner' version '1.0.2'
}

repositories {
    mavenCentral()
    maven { url 'https://jitpack.io' }
}

dependencies {
    // https://bitbucket.org/javacommons/java17-lib/src/main/
    implementation 'org.bitbucket.javacommons:java17-lib:2024.0914.0336.24'

    // ...
    implementation "com.jetbrains.intellij.java:java-gui-forms-rt:+"
    //noinspection GradlePackageUpdate
    //implementation "com.jgoodies:forms:1.1-preview"
    // https://mvnrepository.com/artifact/com.jgoodies/jgoodies-forms
    implementation 'com.jgoodies:jgoodies-forms:1.9.0'


    // https://mvnrepository.com/artifact/org.eclipse.swt/org.eclipse.swt.win32.win32.x86_64
    //implementation 'org.eclipse.swt:org.eclipse.swt.win32.win32.x86_64:4.3'

    // https://mvnrepository.com/artifact/org.eclipse.platform/org.eclipse.swt.win32.win32.x86_64
    //implementation 'org.eclipse.platform:org.eclipse.swt.win32.win32.x86_64:3.127.0'

    //testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    implementation 'org.junit.jupiter:junit-jupiter:5.9.1'

    // https://mvnrepository.com/artifact/commons-io/commons-io
    implementation 'commons-io:commons-io:2.16.1'
    // https://mvnrepository.com/artifact/com.j256.ormlite/ormlite-jdbc
    implementation 'com.j256.ormlite:ormlite-jdbc:6.1'
    // https://mvnrepository.com/artifact/org.slf4j/slf4j-simple
    implementation 'org.slf4j:slf4j-simple:2.0.16'
    // https://mvnrepository.com/artifact/com.h2database/h2
    implementation 'com.h2database:h2:2.3.232'
    // https://mvnrepository.com/artifact/org.xerial/sqlite-jdbc
    implementation 'org.xerial:sqlite-jdbc:3.46.1.0'
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

compileJava.options.encoding = 'UTF-8'
compileTestJava.options.encoding = 'UTF-8'

archivesBaseName = 'noname'

application {
    mainClass = 'app.Main'
}

shadowJar {
    zip64 true
}

test {
    useJUnitPlatform()
    testLogging {
        showStandardStreams true
        events 'started', 'skipped', 'passed', 'failed'
        exceptionFormat 'full'
    }
}

launch4j {
    mainClassName = 'app.Main'
    icon = "${projectDir}/duke256.ico"
    bundledJrePath = './jre-min'
    downloadUrl = 'https://github.com/corretto/corretto-22/releases/latest'
}

tasks.register('run1', JavaExec) {
    main = 'app.MainG_old'
    group = 'application'
    classpath = sourceSets.main.runtimeClasspath
    args = ['arg1', 'arg2©']
}

tasks.register('run2', JavaExec) {
    main = 'app.MainStream2'
    group = 'application'
    classpath = sourceSets.main.runtimeClasspath
    args = ['arg1', 'arg2©']
}

tasks.register('run3', JavaExec) {
    main = 'app.MainStream3'
    group = 'application'
    classpath = sourceSets.main.runtimeClasspath
    args = ['arg1', 'arg2©']
}

tasks.register('runQiita', JavaExec) {
    main = 'qiita.Qiita01'
    group = 'application'
    classpath = sourceSets.main.runtimeClasspath
    args = ['arg1', 'arg2©']
}

tasks.register('runSample', JavaExec) {
    main = 'sample.SwingWorkerSample'
    group = 'application'
    classpath = sourceSets.main.runtimeClasspath
    args = ['arg1', 'arg2©']
}

tasks.register('copy_assets') {
    group = 'shadow'
    project.delete(files("${buildDir}/libs/assets") {
        //exclude '*.jar'
    })
    copy {
        from '.'
        into 'build/libs/'
        include 'assets/**'
    }
}
copy_assets.dependsOn shadowJar

tasks.register('runShadow1', JavaExec) {
    group = 'application'
    main = 'app.Main1'
    classpath = files(shadowJar.archiveFile)
    args = ['arg1', 'arg2']
}
//runShadow1.dependsOn shadowJar
runShadow1.dependsOn copy_assets

tasks.register('runShadow2', JavaExec) {
    group = 'application'
    main = 'app.Main2'
    classpath = files(shadowJar.archiveFile)
    args = ['arg1', 'arg2']
}
//runShadow2.dependsOn shadowJar
runShadow2.dependsOn copy_assets
